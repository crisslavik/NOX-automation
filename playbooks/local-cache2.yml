---
- name: Setup Single Cache Disk (Automated)
  hosts: all
  become: yes

  vars:
    # IMPORTANT: Set this to true on the command line to enable automatic formatting.
    auto_format_single_disk: false
    cache_mount_point: "/mnt/Cache"
    cache_label: "Cache"
    min_disk_size_bytes: 966367641600
    max_disk_size_bytes: 1181116006400

  tasks:
    - name: Ensure filesystem tools are installed
      ansible.builtin.dnf:
        name: [xfsprogs, e2fsprogs]
        state: present

    - name: Gather storage facts
      ansible.builtin.setup:
        filter: ansible_devices

    - name: Find existing partition labeled '{{ cache_label }}'
      ansible.builtin.set_fact:
        target_device_path: "/dev/{{ matching_partitions[0] }}"
      vars:
        matching_partitions: >-
          {%- set partitions = [] -%}
          {%- for device in ansible_devices.values() -%}
            {%- if device.partitions is defined -%}
              {%- for name, data in device.partitions.items() -%}
                {%- if data.links is defined and data.links.labels is defined and cache_label in data.links.labels -%}
                  {%- set _ = partitions.append(name) -%}
                {%- endif -%}
              {%- endfor -%}
            {%- endif -%}
          {%- endfor -%}
          {{- partitions -}}
      when: matching_partitions | length > 0

    - name: Find and automatically format a single unformatted disk
      block:
        - name: Find potential unformatted disks
          ansible.builtin.set_fact:
            potential_devices: >-
              {%- set candidates = [] -%}
              {%- for name, data in ansible_devices.items() -%}
                {%- if data.partitions is defined and data.partitions == {}
                    and data.filesystem is undefined
                    and data.sectors is defined and data.sectorsize is defined
                    and (data.sectors | int * data.sectorsize | int) >= min_disk_size_bytes
                    and (data.sectors | int * data.sectorsize | int) <= max_disk_size_bytes -%}
                  {%- set _ = candidates.append(name) -%}
                {%- endif -%}
              {%- endfor -%}
              {{- candidates -}}

        - name: Automatically format the single disk found
          block:
            - name: Inform which disk will be formatted
              ansible.builtin.debug:
                msg: "Found single blank disk /dev/{{ potential_devices[0] }}. Formatting automatically."

            - name: Format the disk
              ansible.builtin.filesystem:
                fstype: xfs
                dev: "/dev/{{ potential_devices[0] }}"
                opts: "-L {{ cache_label }}"
                force: yes

            - name: Set the device path after formatting
              ansible.builtin.set_fact:
                target_device_path: "/dev/{{ potential_devices[0] }}"
          when: potential_devices | length == 1

      when:
        - target_device_path is not defined
        - auto_format_single_disk | bool

    - name: Mount the cache drive if a device was found or created
      block:
        - name: Display final device path
          ansible.builtin.debug:
            msg: "Found or created cache device: {{ target_device_path }}"

        - name: Create cache mount point
          ansible.builtin.file:
            path: "{{ cache_mount_point }}"
            state: directory
            mode: '0755'

        - name: Mount the cache disk and add to fstab
          ansible.builtin.mount:
            path: "{{ cache_mount_point }}"
            src: "LABEL={{ cache_label }}"
            fstype: xfs
            opts: defaults,noatime
            state: mounted

        - name: Set permissions for all users
          ansible.builtin.file:
            path: "{{ cache_mount_point }}"
            state: directory
            mode: '1777'
      when: target_device_path is defined
